<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{827B207D-2429-4C05-A769-186C7CB35FC3}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>DotNetBuild.Tests</RootNamespace>
    <AssemblyName>DotNetBuild.Tests</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Moq">
      <HintPath>..\packages\Moq.4.1.1309.0919\lib\net40\Moq.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="xunit">
      <HintPath>..\packages\xunit.1.9.2\lib\net20\xunit.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Core\Given_a_ConfigurationRegistry\ConfigurationRegistryTest.cs" />
    <Compile Include="Core\Given_a_ConfigurationSettings\ConfigurationSettingsTest.cs" />
    <Compile Include="Core\Given_a_ConfigurationSettings\When_told_to_Get_setting_with_unexisting_key_default_value.cs" />
    <Compile Include="Core\Given_a_ConfigurationSettings\When_told_to_Add_setting_without_passing_in_a_value.cs" />
    <Compile Include="Core\Given_a_ConfigurationSettings\When_told_to_Add_setting.cs" />
    <Compile Include="Core\Given_a_ConfigurationSettings\When_told_to_Add_setting_without_passing_in_a_key.cs" />
    <Compile Include="Core\Given_a_ConfigurationSettings\When_told_to_Add_setting_with_existing_key.cs" />
    <Compile Include="Core\Given_a_ConfigurationSettings\When_told_to_Get_setting_with_unexisting_key.cs" />
    <Compile Include="Core\Given_a_ConfigurationRegistry\When_told_to_Add_configuration_settings.cs" />
    <Compile Include="Core\Given_a_ConfigurationRegistry\When_told_to_Add_configuration_settings_without_passing_in_a_key.cs" />
    <Compile Include="Core\Given_a_ConfigurationRegistry\When_told_to_Add_configuration_settings_without_passing_in_a_value.cs" />
    <Compile Include="Core\Given_a_ConfigurationRegistry\When_told_to_Add_configuration_settings_with_existing_key.cs" />
    <Compile Include="Core\Given_a_ConfigurationRegistry\When_told_to_Get_configuration_settings.cs" />
    <Compile Include="Core\Given_a_ConfigurationRegistry\When_told_to_Get_configuration_settings_with_unexisting_key.cs" />
    <Compile Include="Runner\Given_a_BuildRunner\When_told_to_Run_with_no_configuration_that_exists.cs" />
    <Compile Include="Runner\Given_a_BuildRunner\When_told_to_Run_with_no_configuration.cs" />
    <Compile Include="Runner\Given_a_BuildRunner\When_told_to_Run_with_no_configurator.cs" />
    <Compile Include="Runner\Infrastructure\Reflection\Given_a_AssemblyWrapper\When_told_to_Get_one_type_with_no_filter.cs" />
    <Compile Include="Core\Targets\Given_a_TargetRegistry\StaticTests\When_having_multiple_TargetRegistry_instances.cs" />
    <Compile Include="Core\Targets\Given_a_TargetRegistry\When_told_to_Add_target.cs" />
    <Compile Include="Core\Targets\Given_a_TargetRegistry\When_told_to_Add_target_without_passing_in_a_key.cs" />
    <Compile Include="Core\Targets\Given_a_TargetRegistry\When_told_to_Add_target_without_passing_in_a_value.cs" />
    <Compile Include="Core\Targets\Given_a_TargetRegistry\When_told_to_Add_target_with_existing_key.cs" />
    <Compile Include="Core\Targets\Given_a_TargetRegistry\When_told_to_Get_target.cs" />
    <Compile Include="Core\Targets\Given_a_TargetRegistry\When_told_to_Get_target_with_unexisting_key.cs" />
    <Compile Include="Core\Targets\Given_a_TargetBuilder\When_build_with_no_name.cs" />
    <Compile Include="Core\Targets\Given_a_TargetBuilder\When_build_with_valid_arguments.cs" />
    <Compile Include="Core\Targets\Given_a_TargetBuilder\When_setting_ContinueOnError.cs" />
    <Compile Include="Core\Targets\Given_a_TargetBuilder\When_setting_DependsOn_multiple_targets.cs" />
    <Compile Include="Core\Targets\Given_a_TargetBuilder\When_setting_DependsOn_target.cs" />
    <Compile Include="Core\Targets\Given_a_TargetBuilder\When_setting_ExecuteFunc.cs" />
    <Compile Include="Runner\Facilities\Logging\Given_a_LoggerFacilityProvider\When_told_to_InjectIfRequired.cs" />
    <Compile Include="Runner\Facilities\Logging\Given_a_Logger\When_told_to_LogError.cs" />
    <Compile Include="Runner\Facilities\Logging\Given_a_Logger\When_told_to_LogInfo.cs" />
    <Compile Include="Runner\Facilities\State\Given_a_StateReader\When_told_to_Get_state.cs" />
    <Compile Include="Runner\Facilities\State\Given_a_StateWriter\When_told_to_Add_state.cs" />
    <Compile Include="Runner\Facilities\TestFacility.cs" />
    <Compile Include="Runner\Facilities\TestFacilityAcceptor.cs" />
    <Compile Include="Runner\Facilities\TestFacilityProvider.cs" />
    <Compile Include="Runner\Facilities\Given_a_FacilityProvider\When_told_to_InjectIfRequired.cs" />
    <Compile Include="Runner\Facilities\Given_a_FacilityProvider\When_told_to_InjectIfRequired_not_required.cs" />
    <Compile Include="Runner\Facilities\State\Given_a_StateWriterFacilityProvider\When_told_to_InjectIfRequired.cs" />
    <Compile Include="Runner\Facilities\State\Given_a_StateReaderFacilityProvider\When_told_to_InjectIfRequired.cs" />
    <Compile Include="Runner\Infrastructure\Reflection\Given_a_AssemblyLoader\When_told_to_Load_an_invalid_Assembly.cs" />
    <Compile Include="Runner\Infrastructure\Reflection\Given_a_AssemblyLoader\When_told_to_Load_a_Assembly.cs" />
    <Compile Include="Runner\Infrastructure\Reflection\Given_a_TypeFilter\When_told_to_Get_its_Filter.cs" />
    <Compile Include="Runner\Infrastructure\Reflection\Given_a_AssemblyWrapper\When_told_to_Get_one_type_with_no_filter_and_multiple_matches.cs" />
    <Compile Include="Runner\Infrastructure\Reflection\Given_a_AssemblyWrapper\When_told_to_Get_one_type_with_a_filter.cs" />
    <Compile Include="Runner.CommandLine\Given_a_BuildRunnerParametersBuilder\When_told_to_BuildFrom_an_argument_array.cs" />
    <Compile Include="Runner\Facilities\State\Given_a_StateRegistry\When_told_to_Add_state_without_passing_in_a_key.cs" />
    <Compile Include="Runner\Facilities\State\Given_a_StateRegistry\When_told_to_Add_state.cs" />
    <Compile Include="Runner\Facilities\State\Given_a_StateRegistry\When_told_to_Add_state_without_passing_in_a_value.cs" />
    <Compile Include="Runner\Facilities\State\Given_a_StateRegistry\When_told_to_Add_state_with_existing_key.cs" />
    <Compile Include="Runner\Facilities\State\Given_a_StateRegistry\When_told_to_Get_state.cs" />
    <Compile Include="Runner\Facilities\State\Given_a_StateRegistry\When_told_to_Get_state_with_unexisting_key.cs" />
    <Compile Include="Runner\Facilities\State\Given_a_StateRegistry\When_told_to_Get_state_with_wrong_type.cs" />
    <Compile Include="Runner\Given_a_BuildRunner\When_told_to_Run_with_no_assembly.cs" />
    <Compile Include="Runner\Given_a_BuildRunner\When_told_to_Run_with_no_target.cs" />
    <Compile Include="Runner\Given_a_ConfiguratorResolver\When_told_to_Resolve_a_Configuration.cs" />
    <Compile Include="Runner\Given_a_ConfiguratorResolver\When_told_to_Resolve_a_Configurator_with_no_assembly_wrapper.cs" />
    <Compile Include="Runner\Given_a_ConfiguratorResolver\When_told_to_Resolve_a_Configurator_with_no_configurator.cs" />
    <Compile Include="Runner\Given_a_ConfiguratorResolver\When_told_to_Resolve_a_Configurator_with_no_configurator_type.cs" />
    <Compile Include="Core\Given_a_ConfigurationSettings\When_told_to_Get_setting_of_the_wrong_type.cs" />
    <Compile Include="Core\Given_a_ConfigurationSettings\When_told_to_Get_setting.cs" />
    <Compile Include="Runner\Facilities\State\Given_a_StateRegistry\StaticTests\When_having_multiple_StateRegistry_instances.cs" />
    <Compile Include="Runner\Given_a_TargetExecutor\When_told_to_Execute_a_Target_with_facilities.cs" />
    <Compile Include="Runner\Given_a_TargetExecutor\When_told_to_Execute_a_Target_with_a_safe_exception.cs" />
    <Compile Include="Runner\Given_a_TargetExecutor\When_told_to_Execute_a_Target_with_a_safe_exception_and_continue_on_error.cs" />
    <Compile Include="Runner\Given_a_TargetInspector\When_told_to_CheckForCircularDependencies_on_a_none_circular_execution_path.cs" />
    <Compile Include="Runner\Given_a_TargetInspector\When_told_to_CheckForCircularDependencies_on_a_circular_execution_path.cs" />
    <Compile Include="Runner\Infrastructure\Reflection\Given_a_TypeActivator\When_told_to_Activate_a_Type_with_no_Type.cs" />
    <Compile Include="Runner\Infrastructure\Reflection\Given_a_TypeActivator\When_told_to_Activate_a_Type_with_no_default_constructor.cs" />
    <Compile Include="Runner\Infrastructure\Reflection\Given_a_TypeActivator\When_told_to_Activate_a_Type.cs" />
    <Compile Include="Runner\Given_a_TargetExecutor\When_told_to_Execute_a_null_Target.cs" />
    <Compile Include="Runner\Given_a_TargetExecutor\When_told_to_Execute_a_Target_with_a_circular_dependency.cs" />
    <Compile Include="Runner\Given_a_TargetExecutor\When_told_to_Execute_a_Target_with_an_exception_and_continue_on_error.cs" />
    <Compile Include="Runner\Given_a_TargetExecutor\When_told_to_Execute_a_Target_with_an_exception.cs" />
    <Compile Include="Runner\Given_a_TargetExecutor\When_told_to_Execute_a_Target.cs" />
    <Compile Include="TestHelpers.cs" />
    <Compile Include="TestData.cs" />
    <Compile Include="TestSpecification.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Runner\Given_a_BuildRunner\When_told_to_Run_with_valid_arguments.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\DotNetBuild.Runner.CommandLine\DotNetBuild.Runner.CommandLine.csproj">
      <Project>{b477828c-5a65-4b3a-a180-42782f420aa1}</Project>
      <Name>DotNetBuild.Runner.CommandLine</Name>
    </ProjectReference>
    <ProjectReference Include="..\DotNetBuild.Runner.ScriptCs\DotNetBuild.Runner.ScriptCs.csproj">
      <Project>{8ff41f36-65f1-4503-bea2-06f0fac850af}</Project>
      <Name>DotNetBuild.Runner.ScriptCs</Name>
    </ProjectReference>
    <ProjectReference Include="..\DotNetBuild.Runner\DotNetBuild.Runner.csproj">
      <Project>{b12bbf26-d91f-4516-99e8-0ae27a40069e}</Project>
      <Name>DotNetBuild.Runner</Name>
    </ProjectReference>
    <ProjectReference Include="..\DotNetBuild.Tests.TestAssembly\DotNetBuild.Tests.TestAssembly.csproj">
      <Project>{ea116e5a-b97d-47d4-8375-a72b28df61b1}</Project>
      <Name>DotNetBuild.Tests.TestAssembly</Name>
    </ProjectReference>
    <ProjectReference Include="..\DotNetBuild.Core\DotNetBuild.Core.csproj">
      <Project>{8b2fec24-dc07-4b6c-8f5b-abf90d40c9d8}</Project>
      <Name>DotNetBuild.Core</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <Folder Include="Runner.ScriptCs\" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>